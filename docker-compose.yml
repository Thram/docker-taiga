version: "2"

volumes:
  postgres_data: {}
  postgres_backup: {}
  taiga_backend_media: {}

services:
  postgresql:
    image: postgres:10-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    environment:
      - POSTGRES_USER=taiga
      - POSTGRES_DB=taiga
      - POSTGRES_PASSWORD=123

  redis:
    image: redis:4.0-alpine

  rabbitmq:
    image: rabbitmq:3.6-alpine
    hostname: taiga_rabbitmq
    environment:
      # https://www.rabbitmq.com/clustering.html#erlang-cookie
      - RABBITMQ_ERLANG_COOKIE='secret_cookie_here'
      - RABBITMQ_DEFAULT_USER=taiga
      - RABBITMQ_DEFAULT_PASS=taiga
      - RABBITMQ_DEFAULT_VHOST=taiga
      # http://www.rabbitmq.com/configure.html#config-items
      # - RABBITMQ_HIPE_COMPILE=1

  backend:
    build: backend/
    volumes:
      - taiga_backend_media:/taiga_backend/media
      - /taiga_backend/static-root
    environment:
      # - DEBUG=True
      - SECRET_KEY=SECRET_KEY
      - POSTGRES_USER=taiga
      - POSTGRES_DB=taiga
      - POSTGRES_PASSWORD=123
      # - ALLOWED_HOSTS=example.com,example2.com
      # Must be in lowercase, because we are using in a json file <frontend> (conf.json)
      # - PUBLIC_REGISTER_ENABLED=false
      # - SSL_ENABLED=True
      # - HOSTNAME=example.com
      # - SKIP_DB_CHECK=True
      # checkdb.py
      # - DB_CHECK_LIMIT_RETRIES='5'
      # - DB_CHECK_SLEEP_INTERVAL='5.5'
      # ANYMAIL
      # - USE_ANYMAIL=True
      # - ANYMAIL_MAILGUN_API_KEY=MAILGUN-KEY
      # - DEFAULT_FROM_EMAIL=example@example.com
    user: taiga
    entrypoint: ["/scripts/entrypoint.sh"]
    # command: ['gunicorn', '--worker-class', 'eventlet', '--workers', '10', '-b', '0.0.0.0:8000', 'taiga.wsgi']
    command: ["gunicorn", "-b", "0.0.0.0:8000", "taiga.wsgi"]

  frontend:
    build: frontend/
    volumes_from:
      - backend:ro
    environment:
      - RABBITMQ_DEFAULT_USER=taiga
      - RABBITMQ_DEFAULT_PASS=taiga
      - RABBITMQ_DEFAULT_VHOST=taiga
    # Must be in lowercase, because we are using in a json file (conf.json)
    #   - DEBUG=true
    #   - API_URL="http://example.com/api/v1/"
    #   - EVENTS_URL="ws://example.com/events"
    # Must be in lowercase, because we are using in a json file (conf.json)
    #   - PUBLIC_REGISTER_ENABLED=false
    #   - DEFAULT_LANGUAGE="en"
    ports:
      - "80:80"
    depends_on:
      # It would be better to add 'postgres' to 'depends_on' on 'backend' service
      # but 'celeryworker' extends 'backend' and we cannot extend a service
      # if it is using 'depends_on'.
      - postgresql
      - backend
      - events

  celeryworker:
    extends: backend
    entrypoint: []
    # command: ['celery', '-A', 'taiga', 'worker', '-c', '4', '--loglevel', 'info']
    command:
      [
        "celery",
        "-A",
        "taiga",
        "worker",
        "-P",
        "eventlet",
        "-c",
        "4",
        "--loglevel",
        "info",
      ]
    depends_on:
      - redis
      - rabbitmq

  events:
    build: events/
    environment:
      # SAME AS SECRET_KEY
      - SECRET_KEY=SECRET_KEY
      - RABBITMQ_DEFAULT_USER=taiga
      - RABBITMQ_DEFAULT_PASS=taiga
      - RABBITMQ_DEFAULT_VHOST=taiga
    depends_on:
      - rabbitmq
